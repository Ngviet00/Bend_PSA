// <auto-generated />
using System;
using Bend_PSA.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bend_PSA.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bend_PSA.Models.Entities.Data", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("model");

                    b.Property<int?>("Result1")
                        .HasColumnType("int")
                        .HasColumnName("result_1");

                    b.Property<int?>("Result2")
                        .HasColumnType("int")
                        .HasColumnName("result_2");

                    b.Property<int?>("Roll")
                        .HasColumnType("int")
                        .HasColumnName("roll");

                    b.Property<string>("TimeLine")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("timeline");

                    b.HasKey("Id");

                    b.HasIndex("TimeLine");

                    b.ToTable("data");
                });

            modelBuilder.Entity("Bend_PSA.Models.Entities.Error", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("DataId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("data_id");

                    b.Property<int?>("TypeError")
                        .HasColumnType("int")
                        .HasColumnName("type_error");

                    b.HasKey("Id");

                    b.HasIndex("DataId");

                    b.ToTable("errors");
                });

            modelBuilder.Entity("Bend_PSA.Models.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("DataId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("data_id");

                    b.Property<string>("PathUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("path_url");

                    b.HasKey("Id");

                    b.HasIndex("DataId");

                    b.ToTable("images");
                });

            modelBuilder.Entity("Bend_PSA.Models.Entities.Error", b =>
                {
                    b.HasOne("Bend_PSA.Models.Entities.Data", "Data")
                        .WithMany("Errors")
                        .HasForeignKey("DataId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Data");
                });

            modelBuilder.Entity("Bend_PSA.Models.Entities.Image", b =>
                {
                    b.HasOne("Bend_PSA.Models.Entities.Data", "Data")
                        .WithMany("Images")
                        .HasForeignKey("DataId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Data");
                });

            modelBuilder.Entity("Bend_PSA.Models.Entities.Data", b =>
                {
                    b.Navigation("Errors");

                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
